<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- DATE_FORMAT -->
<!-- 时间转字符串：date_format -->
<!-- 字符串转时间：str_to_date -->
<!-- DATE_FORMAT(tcb.check_begin_date, '%Y-%m-%d') -->
<!-- birthday格式：%Y-%m-%d -->
<!-- 其他时间格式：- %Y-%m-%d %H:%i:%s -->
<mapper namespace="com.yl.mapper.WxScenicMapper">
	<select id="getScenic" parameterType="Map" resultType="com.yl.bean.Scenic">
		select
		s.id as scenicId,
		s.fileCode,
		s.coverImg,
		s.scenicName,
		s.longTime,
		sgf.price,
		sgf.usePrice
		from scenic s
		left join
		scenicguidefee sgf on s.id =
		sgf.scenicId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="scenicId != null">
				s.id = #{scenicId}
			</if>
			<if test="type != null">
				<choose>
					<when test="type != null and type =='1'">
						AND TO_DAYS(NOW()) &gt;= TO_DAYS(sgf.startDate)
						AND
						TO_DAYS(NOW()) &lt; TO_DAYS(sgf.endDate+1)
					</when>
				</choose>
			</if>
		</trim>
		AND s.isWx = 0
		group by s.id
	</select>

	<select id="getScenicGuide" parameterType="Map"
		resultType="com.yl.bean.ScenicGuide">
		select g.*,sg.scenicId
		from guide g left join scenicguide sg on g.id =
		sg.guideId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="scenicId != null">
				sg.scenicId = #{scenicId}
			</if>
			<if test="guideNo != null">
				AND g.guideNo = #{guideNo}
			</if>
		</trim>
		AND g.status = 1
	</select>

	<select id="getOrderGuide" parameterType="Map"
		resultType="com.yl.bean.OrderGuide">
		select
		o.orderNo,
		o.tradeNo,
		o.userId,
		o.expenseId,
		o.paymentAmount,
		o.status,
		DATE_FORMAT(o.addTime,
		'%Y-%m-%d %H:%i:%s') as addTime,
		o.orderType,
		o.openID,
		ge.guideNum,
		ge.guideUseNum,
		ge.status as
		guideExpandStatus,
		ge.scenicId,
		ge.price,
		ge.usePrice,
		s.scenicName
		from
		guideexpand ge
		right
		join `order` o on o.orderNo = ge.orderNo
		left join
		scenic s on
		s.id = ge.scenicId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="orderNo != null">
				o.orderNo = #{orderNo}
			</if>
			<if test="userId != null">
				AND o.userId = #{userId}
			</if>
			<if test="openID != null">
				AND o.openID = #{openID}
				AND o.userId = 0
			</if>
		</trim>
		AND o.orderType =8
		AND o.isDel =0
		AND o.status !=1
		order by o.addTime
		desc
		<choose>
			<when test="start != null and num !=null">
				limit #{start}, #{num}
			</when>
		</choose>
	</select>

	<select id="getScenicAdmin" parameterType="Map"
		resultType="com.yl.bean.ScenicAdmin">
		select
		id,
		adminCode,
		adminName,
		realName,
		mobile,
		adminPwd,
		uuID,
		DATE_FORMAT(uuIDExpiry,
		'%Y-%m-%d %H:%i:%s') as uuIDExpiry,
		parentId,
		adminType,
		fk,
		isDel,
		roleId,
		status
		from admin
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="adminName != null">
				adminName =#{adminName}
			</if>
			<if test="adminPwd != null">
				AND adminPwd = #{adminPwd}
			</if>
			<if test="uuID != null">
				AND uuID = #{uuID}
			</if>
			<if test="adminType != null">
				AND adminType =#{adminType}
			</if>
		</trim>
		AND isDel = 0
	</select>

	<update id="updateScenicAdmin" parameterType="Map">
		update admin
		<trim prefix="SET" suffixOverrides=",">
			<if test="adminPwd !=null">
				adminPwd = #{adminPwd},
			</if>
			<if test="uuID !=null">
				uuID = #{uuID},
			</if>
			<if test="uuIDExpiry !=null">
				uuIDExpiry =str_to_date(#{uuIDExpiry,jdbcType =
				DATE},'%Y-%m-%d %H:%i:%s'),
			</if>
			<if test="modifyUser !=null">
				modifyUser = #{modifyUser},
			</if>
			<if test="modifyTime != null">
				modifyTime =str_to_date(#{modifyTime,jdbcType =
				DATE},'%Y-%m-%d %H:%i:%s'),
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="adminName !=null">
				adminName = #{adminName}
			</if>
		</trim>
	</update>

	<select id="getScenicSite" parameterType="Map"
		resultType="com.yl.bean.ScenicSite">
		select id ,scenicSiteName,scenicId from scenicsite
		<trim prefix="where" prefixOverrides="AND">
			<if test="scenicId != null">
				scenicId = #{scenicId}
			</if>
			<if test="scenicSiteId != null">
				AND id = #{scenicSiteId}
			</if>
			AND isDel = 0
		</trim>
	</select>

	<select id="getBindGuideLog" parameterType="Map"
		resultType="com.yl.bean.BindGuideLog">
		select b.*,s.scenicName from bindguidelog b
		left join scenic s on s.id = b.scenicId
		<trim prefix="where" prefixOverrides="AND">
			<if test="orderNo != null">
				b.orderNo = #{orderNo}
			</if>
			<if test="status != null">
				AND b.status = #{status}
			</if>
			<if test="guideNo != null">
				AND b.guideNo = #{guideNo}
			</if>
		</trim>
		order by b.addTime desc
	</select>
		<select id="getBindGuideLogList" parameterType="Map"
		resultType="com.yl.bean.BindGuideLog">
		select b.id,
	 b.openID,
	 b.userId,
	 b.guideNo,    
	 b.status,
	DATE_FORMAT(b.addTime,
		'%Y-%m-%d %H:%i:%s') as addTime,
	 b.operateId,
	 b.orderNo,
	 b.scenicId,
	 b.scenicSiteId,
    case when status = 1 then '授权'
    when  `status` =2 then '退还' end as statusStr,
    case when  b.openID ='0' and b.userId = 0 then '现金' 
	 when  b.openID !='0' then '线上' end  AS sourceTypeStr,
	s.scenicName,st.scenicSiteName from bindguidelog b
		left join scenic s on s.id = b.scenicId
		left join scenicsite st on st.id=b.scenicSiteId 
		<trim prefix="where" prefixOverrides="AND">
			<if test="orderNo != null">
				b.orderNo = #{orderNo}
			</if>
			<if test="status != null">
				AND b.status = #{status}
			</if>
			<if test="guideNo != null">
				AND b.guideNo = #{guideNo}
			</if>
		     <if test="operateId != null">
				AND b.operateId = #{operateId}
			</if>
		</trim>
		order by b.addTime desc
		<choose>
				<when test="start != null and num!=null">
					limit #{start}, #{num}
				</when>
				<otherwise>
					limit 0, 6
				</otherwise>
			</choose>
	</select>
	
	<insert id="saveBindGuideLog" parameterType="Map">
		insert into
		`bindguidelog`
		(
		userId,
		openID,
		guideNo,
		status,
		addTime,
		operateId,
		orderNo,
		scenicId,
		scenicSiteId
		)
		values
		(
		#{userId,jdbcType=INTEGER},
		#{openID,jdbcType=VARCHAR},
		#{guideNo,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		STR_TO_DATE(#{addTime,jdbcType=DATE},
		'%Y-%m-%d %H:%i:%s'),
		#{operateId,jdbcType=INTEGER},
		#{orderNo,jdbcType=VARCHAR},
		#{scenicId,jdbcType=INTEGER},
		#{scenicSiteId,jdbcType=INTEGER}
		)
	</insert>

	<insert id="saveGuideClick" parameterType="Map">
		insert into
		`guideclick`
		(
		clickNum,
		bgfId,
		addDate
		)
		values
		(
		#{clickNum,jdbcType=INTEGER},
		#{bgfId,jdbcType=INTEGER},
		STR_TO_DATE(#{addDate,jdbcType=DATE},
		'%Y-%m-%d')
		)
	</insert>
	<update id="updateGuideClick">
		update guideclick
		<trim prefix="SET" suffixOverrides=",">
			<if test="clickNum !=null">
				clickNum = clickNum+#{clickNum},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="bgfId !=null">
				bgfId = #{bgfId}
			</if>
			AND TO_DAYS(NOW()) = TO_DAYS(addDate)
		</trim>
	</update>
	<select id="getGuideClick" parameterType="Map"
		resultType="com.yl.bean.GuideClick">
		select id,
		bgfId
		from guideclick where
		bgfId = #{bgfId}
		AND
		TO_DAYS(NOW()) = TO_DAYS(addDate)
	</select>
	<select id="getBaseGuideFile" parameterType="Map"
		resultType="com.yl.bean.BaseGuideFile">
		select id,
		baseCode,
		fileName,
		scenicId
		from baseguidefile
		where
		baseCode = #{baseCode}
		and scenicId = #{scenicId}
	</select>
	<select id="getScenicGuideFee" parameterType="Map"
		resultType="com.yl.bean.ScenicGuideFee">
		select  sgf.scenicId,
        sgf.price,
        sgf.usePrice,
        s.scenicName
		from scenicguidefee sgf
		left join scenic s on s.id =scenicId
		where sgf.scenicId = #{scenicId}
		and TO_DAYS(NOW()) &lt;=TO_DAYS(sgf.endDate)
		and  TO_DAYS(NOW()) &gt;=TO_DAYS(sgf.startDate)
	</select>
	<select id="getGuide" parameterType="Map"
		resultType="com.yl.bean.Guide">
		select guideNo,
        status,
        guideIds
		from guide 
		where 
		guideIds = #{guideIds}
	</select>
	<select id="getRefundReason" resultType="com.yl.bean.RefundReason">
	select id as refundReasonId,description from refundreason
	</select>
		<select id="getVersion" parameterType="Map" resultType="com.yl.bean.Version">
		select
		version,
		forceUpdate,
		cityVersion,
		mbSystemType,
		operateType,
		apkUrl
		from version
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="mbSystemType !=null">
				mbSystemType = #{mbSystemType}
			</if>
			<if test="operateType !=null">
				AND operateType = #{operateType}
			</if>
			order by addTime desc
		</trim>
	</select>
		<select id="getOrderGuideInfo" parameterType="Map"
		resultType="com.yl.bean.OrderGuide">
		select
		o.orderNo,
		o.tradeNo,
		o.userId,
		o.expenseId,
		o.paymentAmount,
		o.status,
		DATE_FORMAT(o.addTime,
		'%Y-%m-%d %H:%i:%s') as addTime,
		o.orderType,
		o.openID,
		ge.guideNum,
		ge.guideUseNum,
		ge.status as
		guideExpandStatus,
		ge.scenicId,
		ge.price,
		ge.usePrice,
		s.scenicName
		from
		guideexpand ge
		right
		join `order` o on o.orderNo = ge.orderNo
		left join
		scenic s on
		s.id = ge.scenicId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="orderNo != null">
				o.orderNo = #{orderNo}
			</if>
			<if test="userId != null">
				AND o.userId = #{userId}
			</if>
			<if test="openID != null">
				AND o.openID = #{openID}
				AND o.userId = 0
			</if>
		</trim>
		AND o.orderType =8
		AND o.isDel =0
		AND o.status =1
		order by o.addTime
		desc
		<choose>
			<when test="start != null and num !=null">
				limit #{start}, #{num}
			</when>
		</choose>
	</select>
		<insert id="operateLoginLog" parameterType="Map">
		insert into
		`loginlog`
		(
		operateId,
		loginType,
		platformType,
		operateTime
		)
		values
		(
		#{operateId,jdbcType=INTEGER},
		#{loginType,jdbcType=INTEGER},
		#{platformType,jdbcType=INTEGER},
		now()
		)
	</insert>
</mapper>