<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- DATE_FORMAT -->
<!-- 时间转字符串：date_format -->
<!-- 字符串转时间：str_to_date -->
<!-- DATE_FORMAT(tcb.check_begin_date, '%Y-%m-%d') -->
<!-- birthday格式：%Y-%m-%d -->
<!-- 其他时间格式：- %Y-%m-%d %H:%i:%s -->
<mapper namespace="com.yl.mapper.OrderMapper">
	<select id="getOrder" parameterType="Map" resultType="String">
		select
		orderNo
		from `order`
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="orderNo != null">
				orderNo = #{orderNo}
			</if>
		</trim>
	</select>
	<insert id="saveOrder" parameterType="com.yl.bean.Order"
		useGeneratedKeys="true" keyProperty="id">
		insert into `order`
		(
		orderNo,
		tradeNo,
		userId,
		expenseId,
		postageAmount,
		goodsAmount,
		deductionAmount,
		payableAmount,
		paymentAmount,
		status,
		remark,
		addTime,
		orderType,
		isDel,
		endTime,
		openID
		)
		values
		(
		#{orderNo,jdbcType=VARCHAR},
		#{tradeNo,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER},
		#{expenseId,jdbcType=VARCHAR},
		#{postageAmount,jdbcType=DECIMAL},
		#{goodsAmount,jdbcType=DECIMAL},
		#{deductionAmount,jdbcType=DECIMAL},
		#{payableAmount,jdbcType=DECIMAL},
		#{paymentAmount,jdbcType=DECIMAL},
		#{status,jdbcType=INTEGER},
		#{remark,jdbcType=LONGVARCHAR},
		STR_TO_DATE(#{addTime,jdbcType=DATE},
		'%Y-%m-%d %H:%i:%s'),
		#{orderType,jdbcType=INTEGER},
		#{isDel,jdbcType=INTEGER},
		STR_TO_DATE(#{endTime,jdbcType=DATE},
		'%Y-%m-%d %H:%i:%s'),
		#{openID,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateOrder" parameterType="Map">
		update `order`
		<trim prefix="SET" suffixOverrides=",">
			<if test="isDel !=null  ">
				isDel = #{isDel},
			</if>
			<if test="status !=null ">
				status = #{status},
			</if>
			<if test="tradeNo1 !=null ">
				tradeNo = #{tradeNo1},
			</if>
			<if test="endTime !=null ">
				endTime = STR_TO_DATE(
				#{endTime,jdbcType= DATE},
				'%Y-%m-%d %H:%i:%s'),
			</if>
			<if test="expenseId !=null  ">
				expenseId = #{expenseId},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="id !=null">
				id = #{id}
			</if>
			<if test="userId !=null ">
				AND userId = #{userId}
			</if>
			<if test="openID !=null ">
				AND openID = #{openID}
			</if>
			<if test="orderNo !=null ">
				AND orderNo = #{orderNo}
			</if>
			<if test="tradeNo !=null ">
				AND tradeNo = #{tradeNo}
			</if>
		</trim>
	</update>

	<insert id="saveExpenseUserlog" parameterType="Map">
		insert into
		expenseuserlog(
		expenseUserNo,
		serialNo,
		userId,
		paymentAmount,
		useType,
		paymentType,
		expenseType,
		sourceType,
		addTime,openID,
		refundNo,
		orderNo,remark
		)
		values(
		#{expenseUserNo,jdbcType =
		VARCHAR},
		#{serialNo,jdbcType =
		VARCHAR},
		#{userId,jdbcType =
		INTEGER},
		#{paymentAmount,jdbcType =
		DECIMAL},
		#{useType,jdbcType =
		INTEGER},
		#{paymentType,jdbcType =
		INTEGER},
		#{expenseType,jdbcType =
		INTEGER},
		#{sourceType,jdbcType =
		INTEGER},
		str_to_date(#{addTime,jdbcType =
		DATE},'%Y-%m-%d %H:%i:%s'),
		#{openID,jdbcType =
		VARCHAR},
		#{refundNo,jdbcType =
		VARCHAR},
		#{orderNo,jdbcType =
		VARCHAR},
		#{remark,jdbcType =
		VARCHAR}
		)
	</insert>
	<insert id="saveExpenseGuidelog" parameterType="Map">
		insert into
		expenseguidelog(
		expenseGuideNo,
		serialNo,
		userId,
		paymentAmount,
		userType,
		paymentType,
		addTime,openID,
		refundNo,
		orderNo,remark,
		scenicId,operateId,
		refundReasonId,
		deductionPrice,
		expenseType
		)
		values(
		#{expenseGuideNo,jdbcType =
		VARCHAR},
		#{serialNo,jdbcType =
		VARCHAR},
		#{userId,jdbcType =
		INTEGER},
		#{paymentAmount,jdbcType =
		DECIMAL},
		#{userType,jdbcType =
		INTEGER},
		#{paymentType,jdbcType =
		INTEGER},
		str_to_date(#{addTime,jdbcType =
		DATE},'%Y-%m-%d %H:%i:%s'),
		#{openID,jdbcType =
		VARCHAR},
		#{refundNo,jdbcType =
		VARCHAR},
		#{orderNo,jdbcType =
		VARCHAR},
		#{remark,jdbcType =
		VARCHAR},
		#{scenicId,jdbcType =
		INTEGER},
		#{operateId,jdbcType =
		INTEGER},
		#{refundReasonId,jdbcType =
		INTEGER},
		#{deductionPrice,jdbcType =
		DECIMAL},
		#{expenseType,jdbcType =
		INTEGER}
		)
	</insert>
	<insert id="saveExpenseSystemlog" parameterType="Map">
		insert into
		expensesystemlog(
		expenseSystemNo,
		expenseNo,
		adminId,
		amount,
		operateType,
		addTime
		)
		values(
		#{expenseSystemNo,jdbcType =
		VARCHAR},
		#{expenseNo,jdbcType =
		VARCHAR},
		#{adminId,jdbcType =
		INTEGER},
		#{amount,jdbcType =
		DECIMAL},
		#{operateType,jdbcType =
		INTEGER},
		str_to_date(#{addTime,jdbcType =
		DATE},'%Y-%m-%d %H:%i:%s')
		)
	</insert>
	<insert id="saveOrderLog" parameterType="Map">
		insert into
		orderlog(
		orderNo,
		operateId,
		status,
		operateType,
		operateTime,
		openID
		)
		values(
		#{orderNo,jdbcType =
		VARCHAR},
		#{operateId,jdbcType =
		INTEGER},
		#{status,jdbcType =
		INTEGER},
		#{operateType,jdbcType =
		INTEGER},
		str_to_date(#{operateTime,jdbcType =
		DATE},'%Y-%m-%d %H:%i:%s'),
		#{openID,jdbcType =
		VARCHAR}
		)
	</insert>
	<select id="getAdmin" resultType="com.yl.bean.Admin"
		parameterType="Map">
		select id,
		adminCode,
		adminName,
		realName,
		parentId,
		adminType,
		fk
		from
		admin
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="adminType != null">
				adminType = #{adminType}
			</if>
			<if test="fk != null ">
				AND fk = #{fk}
			</if>
			<if test="id != null ">
				AND id = #{id}
			</if>
			<if test="parentId != null ">
				AND parentId = #{parentId}
			</if>
		</trim>
	</select>
	<select id="getOrderDetails" resultType="com.yl.bean.Order"
		parameterType="Map">
		select id,
		orderNo,
		tradeNo,
		userId,
		expenseId,
		postageAmount,
		goodsAmount,
		deductionAmount,
		payableAmount,
		paymentAmount,
		status,
		remark,
		DATE_FORMAT(addTime,
		'%Y-%m-%d %H:%i:%s') as addTime,
		DATE_FORMAT(endTime,
		'%Y-%m-%d %H:%i:%s') as endTime,
		orderType,
		isDel,
		openID
		from
		`order`
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="userId != null">
				userId = #{userId}
			</if>
			<if test="openID != null">
				AND openID = #{openID}
			</if>
			<if test="orderType != null">
				AND orderType = #{orderType}
			</if>
			<if test="orderNo != null and orderNo !=''">
				AND orderNo = #{orderNo}
			</if>
			<if test="tradeNo != null and tradeNo !=''">
				AND tradeNo = #{tradeNo}
			</if>
			<if test="id != null ">
				AND id = #{id}
			</if>
			<if test="status != null ">
				AND status = #{status}
			</if>
			AND isDel = 0
		</trim>
	</select>

	<insert id="saveGuideOrder" parameterType="Map">
		insert into
		`guideexpand`
		(
		orderNo,
		guideNum,
		guideUseNum,
		scenicId,
		price,
		usePrice,
		status
		)
		values
		(
		#{orderNo,jdbcType=VARCHAR},
		#{guideNum,jdbcType=INTEGER},
		#{guideUseNum,jdbcType=INTEGER},
		#{scenicId,jdbcType=INTEGER},
		#{price,jdbcType=DECIMAL},
		#{usePrice,jdbcType=DECIMAL},
		#{status,jdbcType=INTEGER}
		)
	</insert>
	<update id="updateGuideExpand" parameterType="Map">
		update `guideexpand`
		<trim prefix="SET" suffixOverrides=",">
			<if test="guideUseNum !=null  ">
				guideUseNum = guideUseNum+#{guideUseNum},
			</if>
			<if test="status !=null ">
				status = #{status},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="orderNo !=null ">
				orderNo = #{orderNo}
			</if>
		</trim>
	</update>
	<update id="updateGuideStatus" parameterType="Map">
		update `guide`
		<trim prefix="SET" suffixOverrides=",">
			<if test="status !=null ">
				status = #{status},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="guideNo !=null ">
				guideNo = #{guideNo}
			</if>
		</trim>
	</update>
<select id="getExpenseGuideLogPrice" resultType="Bigdecimal"
		parameterType="Map">
		select 
		sum(paymentAmount)
		from
		expenseguidelog
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="userId != null">
				userId = #{userId}
			</if>
			<if test="openID != null">
				AND openID = #{openID}
			</if>
			<if test="userType != null">
				AND userType = #{userType}
			</if>
			<if test="operateId != null">
				AND operateId = #{operateId}
			</if>
			<if test="paymentType != null">
				AND paymentType = #{paymentType}
			</if>
			<if test="scenicId != null">
				AND scenicId = #{scenicId}
			</if>
		</trim>
		AND TO_DAYS(NOW()) = TO_DAYS(addTime)
	</select>
	
	<select id="getExpenseGuideLog" resultType="com.yl.bean.ExpenseGuideLog"
		parameterType="Map">
		select 
		*
		from
		expenseguidelog
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="userId != null">
				userId = #{userId}
			</if>
			<if test="openID != null">
				AND openID = #{openID}
			</if>
			<if test="userType != null">
				AND userType = #{userType}
			</if>
			<if test="operateId != null">
				AND operateId = #{operateId}
			</if>
			<if test="paymentType != null">
				AND paymentType = #{paymentType}
			</if>
			<if test="scenicId != null">
				AND scenicId = #{scenicId}
			</if>
			<if test="scenicId != null">
				AND scenicId = #{scenicId}
			</if>
			<if test="expenseGuideNo != null">
				AND expenseGuideNo = #{expenseGuideNo}
			</if>
		</trim>
	</select>
	
	
	
</mapper>